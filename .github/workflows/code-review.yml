name: Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Code Review
        id: review
        env:
          SILICONFLOW_API_KEY: ${{ secrets.SILICONFLOW_API_KEY }}
        run: |
          # 直接运行 TypeScript 文件
          OUTPUT=$(npx tsx scripts/code-review.ts ${{ github.event.pull_request.number }} ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})

          # 提取报告内容
          REPORT=$(echo "$OUTPUT" | sed -n '/---REPORT_START---/,/---REPORT_END---/p' | sed '1d;$d')

          # 保存报告
          echo "$REPORT" > review.md

          # 输出到 GitHub Actions 日志
          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "$REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reviewContent = fs.readFileSync('review.md', 'utf8');

            // 查找现有的审查评论
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🤖 AI 代码审查报告')
            );

            if (existingComment) {
              // 更新现有评论
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: reviewContent
              });
            } else {
              // 创建新评论
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: reviewContent
              });
            }

      - name: Create Review Summary
        run: |
          echo "## 📋 代码审查摘要" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ 已使用 DeepSeek 模型完成代码审查" >> $GITHUB_STEP_SUMMARY
          echo "🔗 查看详细审查结果请查看 PR 评论" >> $GITHUB_STEP_SUMMARY
