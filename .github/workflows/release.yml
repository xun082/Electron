name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS Intel artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-app-macos-intel-${{ github.ref_name }}
          path: ./dist/macos-intel

      - name: Download macOS Apple Silicon artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-app-macos-apple-silicon-${{ github.ref_name }}
          path: ./dist/macos-apple-silicon

      - name: Download macOS Apple Silicon Latest artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-app-macos-apple-silicon-latest-${{ github.ref_name }}
          path: ./dist/macos-apple-silicon-latest

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-app-windows-${{ github.ref_name }}
          path: ./dist/windows

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-app-linux-${{ github.ref_name }}
          path: ./dist/linux

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/macos-intel/**/*.dmg
            ./dist/macos-intel/**/*.zip
            ./dist/macos-apple-silicon/**/*.dmg
            ./dist/macos-apple-silicon/**/*.zip
            ./dist/macos-apple-silicon-latest/**/*.dmg
            ./dist/macos-apple-silicon-latest/**/*.zip
            ./dist/windows/**/*.exe
            ./dist/windows/**/*.zip
            ./dist/linux/**/*.AppImage
            ./dist/linux/**/*.deb
            ./dist/linux/**/*.rpm
            ./dist/linux/**/*.zip
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
